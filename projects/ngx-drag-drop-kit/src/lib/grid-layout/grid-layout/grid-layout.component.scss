grid-layout {
  position: relative;
  width: 100%;
  display: block;
  min-height: 400px;
  padding: var(--gap);
  border: var(--border-width) var(--border-color) solid;
  border-radius: 2px;

  &:before {
    content: '';
    margin: var(--gap);
    pointer-events: none;
    border: none;
    position: absolute;
    inset: 0;
    z-index: 0;
    transition: opacity 0.2s;
    // opacity: 0;
    background-image: repeating-linear-gradient(
        var(--border-color) 0 var(--border-width),
        var(--row-color) var(--border-width) calc(var(--row-height) - var(--border-width)),
        var(--border-color) calc(var(--row-height) - var(--border-width)) calc(var(--row-height)),
        var(--gap-color) calc(var(--row-height)) calc(var(--row-height) + var(--gap))
      ),
      repeating-linear-gradient(
        90deg,
        var(--border-color) 0 var(--border-width),
        var(--column-color) var(--border-width) calc(100% - (var(--border-width) + var(--gap))),
        var(--border-color) calc(100% - (var(--border-width) + var(--gap))) calc(100% - var(--gap)),
        var(--gap-color) calc(100% - var(--gap)) 100%
      );
    background-size: calc((100% + var(--gap)) / var(--columns)) calc(var(--row-height) + var(--gap));
    background-position: 0 0;
  }
}

.grid-item-placeholder {
  position: absolute;
  z-index: 0;
  transition-property: transform;
  transition: all 150ms ease !important;

  &-default {
    opacity: 0.5;
    background-color: #6e02fc;
  }
}
